name: Build & Deploy

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login to Github Packages Docker Registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get the version
        id: get_version
        run: |
          REPO=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          VERSION=$(echo $GITHUB_REF | cut -d / -f 3-)
          echo ::set-output name=REPO::$REPO
          echo ::set-output name=VERSION::$VERSION
          if [[ $VERSION =~ ^v[0-9]+.[0-9]+.[0-9]+$ ]]; then
            TAG="latest"
          elif [[ $VERSION =~ ^b[0-9]+.[0-9]+.[0-9]+$ ]]; then
            TAG="latest-beta"
          else
            TAG="latest-dev"
          fi
          echo ::set-output name=TAG::$TAG
          echo "Version: $VERSION | Tag: $TAG"

      - name: Build docker image
        env:
          REPO: ${{ steps.get_version.outputs.REPO }}
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          TAG: ${{ steps.get_version.outputs.TAG }}
        run: |
          docker build \
            -t ghcr.io/$REPO:$VERSION \
            -t ghcr.io/$REPO:$TAG .

      - name: Extract test report
        uses: shrink/actions-docker-extract@v1
        env:
          REPO: ${{ steps.get_version.outputs.REPO }}
          TAG: ${{ steps.get_version.outputs.TAG }}
        with:
          image: ghcr.io/$REPO:$TAG
          path: "/tmp/test-report/."

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          path: /tmp/test-report/
          name: Test Report
          retention-days: 7

      - name: Push docker image
        id: push-image
        if: steps.get_version.outputs.TAG != 'latest-dev'
        env:
          REPO: ${{ steps.get_version.outputs.REPO }}
          VERSION: ${{ steps.get_version.outputs.VERSION }}
          TAG: ${{ steps.get_version.outputs.TAG }}
        run: |
          docker push ghcr.io/$REPO:$VERSION
          docker push ghcr.io/$REPO:$TAG

      - name: notify-server
        if: steps.push-image.outcome == 'success'
        env:
          API_KEY: ${{ secrets.API_KEY }}
          API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
        run: |
          answer=$(curl --location --request POST 'https://www.black-onion.com'"${API_ENDPOINT}"'' --header 't0k3n: '"${API_KEY}"'' -A "BlackOnion Action Client (yes actually a real one)" )
          if [[ $answer == *"200-success |"* ]];
          then
            echo Successfully connected and started the script!
            exit 0
          else
            echo Could not connect!
            exit 1
          fi