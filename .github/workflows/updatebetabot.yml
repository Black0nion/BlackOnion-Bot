name: BuildAndReleaseBETA

on:
  push:
    tags:
    - 'b*'

jobs:
  buildbeta:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 17 Temurin
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/BlackOnion-Bot/.gradle/caches
            ~/BlackOnion-Bot/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: |
          cd /home/runner/work/BlackOnion-Bot/BlackOnion-Bot/BlackOnion-Bot
          chmod +x ./gradlew
          ./gradlew shadowJar
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        run: |
          rm -f ~/BlackOnion-Bot/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/BlackOnion.Bot/.gradle/caches/modules-2/gc.properties
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          body: Build ${{ steps.get_version.outputs.VERSION }}
          release_name: Beta ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/work/BlackOnion-Bot/BlackOnion-Bot/BlackOnion-Bot/build/libs/BlackOnion-Bot-all.jar
          asset_name: BlackOnion-BetaBot.jar
          asset_content_type: application/java-archive
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}

  notify-server-beta:
    needs: buildbeta
    runs-on: ubuntu-latest
    steps:
    - shell: bash
      env:
        API_KEY: ${{ secrets.API_KEY_BETA }}
        API_ENDPOINT: ${{ secrets.API_ENDPOINT_BETA }}
      run: |
        answer=$(curl --location --request POST 'https://www.black-onion.com'"${API_ENDPOINT}"'' --header 't0k3n: '"${API_KEY}"'' -A "BlackOnion Action Client (yes actually a real one)")
        if [[ $answer == *"200-success |"* ]];
        then
          echo Successfully connected and started the script!
          exit 0
        else
          echo Could not connect!
          exit 1
        fi
